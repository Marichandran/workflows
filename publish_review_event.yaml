name: Publish Review Event

on:
  workflow_run:
    workflows: ["Store_Review_Event"]
    types:
      - completed
permissions: read-all

jobs:
  fetch_and_process:
    runs-on: ubuntu-latest
    steps:
      - name: 'Download artifact'
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "eventjson"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/eventjson.zip`, Buffer.from(download.data));

      - name: 'Unzip artifact'
        run: |
          ls
          unzip eventjson.zip

      - name: Get Token
        run: |
          retries=3
          while [ $retries -gt 0 ]; do
              if RESPONSE=$(curl --location '${{ secrets.CI_GET_TOKEN_URL }}' \
                      --header 'Content-Type: application/x-www-form-urlencoded' \
                      --data-urlencode 'client_id=${{ secrets.CLIENT_ID }}'\
                      --data-urlencode 'client_secret=${{ secrets.CLIENT_SECRET }}' \
                      --data-urlencode 'grant_type=client_credentials'); then
                      break
              fi
              retries=$((retries-1))
              sleep 1
          done

          TOKEN=$(echo "$RESPONSE" | jq -r '.access_token')
          if [ -z "$TOKEN" ]; then
              echo "Error: Failed to retrieve access token"
              exit 1
          fi
          echo "TOKEN=$TOKEN" >> $GITHUB_ENV


      - name: TriggerBuild with Event
        if: success()
        env:
          TOKEN: ${{ env.TOKEN }}
        run: |-
              EVENT_DATA=$(cat event.json)
              retries=3
              while [ $retries -gt 0 ]; do
                  if curl --location --request POST '${{ secrets.CI_GET_PUBLISH_URL }}' \
                      --header 'Content-Type: application/json' \
                      --header 'x-jenkins-event: jenkins' \
                      --header "Authorization: Bearer $TOKEN" \
                      --data "$EVENT_DATA"; then
                      break
                  fi
                  retries=$((retries-1))
                  sleep 1
              done
